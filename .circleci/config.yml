version: 2.0
defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/ruby:2.6.3-node-browsers
      environment:
        RAILS_ENV: test
        DB_HOST: 127.0.0.1
        DB_USERNAME: 'root'
    - image: circleci/mysql:8.0.21
      command: [--default-authentication-plugin=mysql_native_password]
      environment:
        DB_USERNAME: root
        MYSQL_ROOT_HOST: '%'
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        MYSQL_DATABASE: raksul_project_training_test
jobs:
  build:
    <<: *defaults
    steps:
        - checkout

        # Restore bundle cache
        - restore_cache:
            name: Restore bundle cache
            key: vendor-bundle-{{ checksum "Gemfile.lock" }}

        # Bundle install
        - run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle

        # Store bundle cache
        - save_cache:
            name: Store bundle cache
            key: vendor-bundle-{{ checksum "Gemfile.lock" }}
            paths: vendor/bundle

        # Restore yarn cache
        - restore_cache:
            name: Restore yarn cache
            key: yarn-cache-{{ checksum "yarn.lock" }}

        # Yarn install
        - run: yarn install

        # Store yarn cache
        - save_cache:
            name: Store yarn cache
            key: yarn-cache-{{ checksum "yarn.lock" }}
            paths: ~/.cache/yarn

        # Wait for DB
        - run:
            name: Wait for DB
            command: dockerize -wait tcp://localhost:3306 -timeout 1m

        # Setup DB
        - run:
            name: Setup DB
            command: bundle exec rails db:create db:migrate

        # Run tests
        - run:
            name: rubocop
            command: bundle exec rubocop
        - run:
            name: rspec
            command: bundle exec rspec
